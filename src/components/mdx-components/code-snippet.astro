---
import CopyButton from '~/components/copy-button.tsx'
import Typescript from '~/components/icons/Typescript.astro'
import Terminal from '~/components/icons/Terminal.astro'
import FileIcon from '~/components/icons/FileIcon.astro'
import Javascript from '~/components/icons/Javascript.astro'
import Markdown from '~/components/icons/Markdown.astro'
import type { AstroComponentFactory } from 'astro/runtime/server/index.js'

const {
	'data-meta': dataMeta,
	'data-code': dataCode,
	class: className,
	...props
} = Astro.props

const langIconMap: Record<string, AstroComponentFactory> = {
	js: Javascript,
	jsx: Javascript,
	ts: Typescript,
	tsx: Typescript,
	shell: Terminal,
	bash: Terminal,
	md: Markdown,
	mdx: Markdown
}

const LanguageIcon = langIconMap[props['data-language']] ?? FileIcon

const meta: Record<string, string> = {}

if (dataMeta) {
	dataMeta.split(',').forEach((prop: string) => {
		const tokens = prop.split('=')
		meta[tokens[0].trim()] = tokens[1]
	})
}

const title =
	meta.title ??
	(props['data-language'] === 'bash' || props['data-language'] === 'shell'
		? 'Terminal'
		: null)
---

<div class="my-6 overflow-hidden rounded-xl shadow-sm">
	<div
		class="flex h-12 items-center rounded-t-md border-b border-gray-400 bg-gray-200 py-0 pr-3 pl-4"
	>
		<div
			class="text-muted-foreground flex grow items-center justify-start gap-2"
		>
			<LanguageIcon />
			{title && <span class="text-[0.8125rem]">{title}</span>}
		</div>
		<CopyButton client:visible textToCopy={dataCode} />
	</div>

	<pre
		class:list={[className, 'py-5 text-sm [&_.line]:px-5']}
		{...props}><slot /></pre>
</div>
